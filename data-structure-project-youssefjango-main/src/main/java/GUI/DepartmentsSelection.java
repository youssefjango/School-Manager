/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Convertors.DataConvertor;
import Exceptions.InfoException;
import School.Departement;
import Sorters.Sort;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 * Where all the departments are and can be selected to modify.
 *
 * @author YOUSSEF
 */
public class DepartmentsSelection extends javax.swing.JFrame {

    /**
     * Creates new form DepSelection
     */
    public DepartmentsSelection() {
        initComponents();
        //nameLabels();
        startTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jColorChooser1 = new javax.swing.JColorChooser();
        jButton1 = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        depsTable = new javax.swing.JTable();
        goToDepButton = new javax.swing.JButton();
        IDAddField = new javax.swing.JTextField();
        nameAddField = new javax.swing.JTextField();
        numberOfStudentsField = new javax.swing.JTextField();
        depAdder = new javax.swing.JButton();
        depRemover = new javax.swing.JButton();
        IDRemoveField = new javax.swing.JTextField();
        IDSortButton = new javax.swing.JButton();
        numberOfStudentSort = new javax.swing.JButton();
        nameSortButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jCheckBox1.setText("jCheckBox1");

        jButton1.setText("Log Off");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Selection");

        jPanel2.setBackground(new java.awt.Color(153, 0, 51));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        depsTable.setBackground(new java.awt.Color(153, 0, 51));
        depsTable.setForeground(new java.awt.Color(0, 0, 0));
        depsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Department Name", "Number Of Students", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(depsTable);

        goToDepButton.setBackground(new java.awt.Color(255, 255, 255));
        goToDepButton.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        goToDepButton.setForeground(new java.awt.Color(0, 0, 0));
        goToDepButton.setText("Go to Departement");
        goToDepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToDepButtonActionPerformed(evt);
            }
        });

        IDAddField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        IDAddField.setText("ID");

        nameAddField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        nameAddField.setText("Name");
        nameAddField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameAddFieldActionPerformed(evt);
            }
        });

        numberOfStudentsField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        numberOfStudentsField.setText("Number Of Students");
        numberOfStudentsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfStudentsFieldActionPerformed(evt);
            }
        });

        depAdder.setText("Add Department");
        depAdder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depAdderActionPerformed(evt);
            }
        });

        depRemover.setText("Remove Departement");
        depRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depRemoverActionPerformed(evt);
            }
        });

        IDRemoveField.setText("ID");

        IDSortButton.setBackground(new java.awt.Color(255, 0, 102));
        IDSortButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        IDSortButton.setForeground(new java.awt.Color(0, 0, 0));
        IDSortButton.setText("ID");
        IDSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDSortButtonActionPerformed(evt);
            }
        });

        numberOfStudentSort.setBackground(new java.awt.Color(255, 0, 102));
        numberOfStudentSort.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        numberOfStudentSort.setForeground(new java.awt.Color(0, 0, 0));
        numberOfStudentSort.setText("Number Of Students");
        numberOfStudentSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfStudentSortActionPerformed(evt);
            }
        });

        nameSortButton.setBackground(new java.awt.Color(255, 0, 102));
        nameSortButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nameSortButton.setForeground(new java.awt.Color(0, 0, 0));
        nameSortButton.setText("Name");
        nameSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSortButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(IDAddField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameAddField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfStudentsField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depAdder, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(IDRemoveField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goToDepButton, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numberOfStudentSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(IDSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nameSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(depAdder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IDAddField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameAddField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numberOfStudentsField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(depRemover, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(IDRemoveField)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(nameSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IDSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfStudentSort, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goToDepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(46, 46, 46))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(16);
        jTextArea1.setFont(new java.awt.Font("Deneane", 0, 40)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
        jTextArea1.setRows(1);
        jTextArea1.setText("Departement Selection");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private DefaultTableModel modelDepartments;

    private void startTable() {
        modelDepartments = (DefaultTableModel) depsTable.getModel();
        ArrayList<Departement> departments = DataConvertor.convertAllDepartments();
        try {
            for (int i = 0; i < departments.size(); i++) {
                modelDepartments.insertRow(modelDepartments.getRowCount(), new Object[]{
                    departments.get(i).getDepartementName().replace('_', ' '),
                    departments.get(i).getNumberOfStudent(),
                    String.format("%04d", departments.get(i).getID())
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void nameLabels() {
        this.IDAddField.setText("ID");
        this.IDRemoveField.setText("ID");
        this.nameAddField.setText("Name");
        this.numberOfStudentsField.setText("Number Of Students");
    }
    private void goToDepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToDepButtonActionPerformed
        DefaultTableModel table = (DefaultTableModel) depsTable.getModel();
        ArrayList<Departement> departments = DataConvertor.convertAllDepartments();
        if (depsTable.getSelectedRowCount() == 1) {
            new ToDepartementGUI(departments.get(depsTable.getSelectedRow())).setVisible(true);
            JComponent comp = (JComponent) evt.getSource();
            Window win = SwingUtilities.getWindowAncestor(comp);
            win.dispose();
        } else {
            if (depsTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Departements table is empty.");
            } else {
                JOptionPane.showMessageDialog(null, "Please select one departement.");
            }
        }
    }//GEN-LAST:event_goToDepButtonActionPerformed

    private void depRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depRemoverActionPerformed
        try {
            int ID = Integer.parseInt(IDRemoveField.getText());
            ArrayList<Departement> departments = DataConvertor.convertAllDepartments();
            for (int i = 0; i < departments.size(); i++) {
                if (departments.get(i).getID() == ID) {
                    String dep = departments.remove(i).getDepartementName();
                    JOptionPane.showMessageDialog(null, dep + " Departement" + " removed.");
                    new java.io.File("Database\\" + dep + ".txt").delete();
                    DataConvertor.changeDepContent(departments);
                    modelDepartments.setRowCount(0);
                    startTable();
                    return;
                }

            }
            throw new InfoException();
        } catch (InfoException e) {
            JOptionPane.showMessageDialog(null, "Departement not found");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        nameLabels();
    }//GEN-LAST:event_depRemoverActionPerformed

    private void depAdderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depAdderActionPerformed
        try {
            int ID = Integer.parseInt(IDAddField.getText());
            int numOfStudents = Integer.parseInt(numberOfStudentsField.getText());
            String nameOfDep = nameAddField.getText().replace(' ', '_');
            ArrayList<Departement> departments = DataConvertor.convertAllDepartments();

            if (ID > 9999) {
                throw new InfoException();
            }
            for (int i = 0; i < departments.size(); i++) {
                if(departments.get(i).getID() == ID)
                    throw new InfoException();
            }
            departments.add(new Departement(ID, nameOfDep, numOfStudents));
            DataConvertor.changeDepContent(departments);
        } catch (InfoException e) {
            JOptionPane.showMessageDialog(null, "ID is invalid");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        modelDepartments.setRowCount(0);
        startTable();
        nameLabels();
    }//GEN-LAST:event_depAdderActionPerformed

    private void numberOfStudentsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfStudentsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfStudentsFieldActionPerformed

    private void nameAddFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameAddFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameAddFieldActionPerformed

    private void nameSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSortButtonActionPerformed
        ArrayList<Departement> departmentsSortByName = DataConvertor.convertAllDepartments();
        new Sort().sort(departmentsSortByName, new Comparators.NameComparatorDepartement());
        modelDepartments = (DefaultTableModel) depsTable.getModel();
        DataConvertor.changeDepContent(departmentsSortByName);
        modelDepartments.setRowCount(0);
        startTable();
        JOptionPane.showMessageDialog(null, "Sorted departements by name!");
    }//GEN-LAST:event_nameSortButtonActionPerformed

    private void IDSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDSortButtonActionPerformed
        ArrayList<Departement> departmentsSortByID = DataConvertor.convertAllDepartments();
        new Sort().sort(departmentsSortByID, new Comparators.IDComparatorDepartements());
        DataConvertor.changeDepContent(departmentsSortByID);
        modelDepartments = (DefaultTableModel) depsTable.getModel();

        modelDepartments.setRowCount(0);
        startTable();
        JOptionPane.showMessageDialog(null, "Sorted departements by ID!");
    }//GEN-LAST:event_IDSortButtonActionPerformed

    private void numberOfStudentSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfStudentSortActionPerformed
        ArrayList<Departement> departmentsSortByNumberOfStudents = DataConvertor.convertAllDepartments();
        new Sort().sort(departmentsSortByNumberOfStudents, new Comparators.NumberOfStudentsComparator());
        modelDepartments = (DefaultTableModel) depsTable.getModel();
        DataConvertor.changeDepContent(departmentsSortByNumberOfStudents);
        modelDepartments.setRowCount(0);
        startTable();
        JOptionPane.showMessageDialog(null, "Sorted departements by number of Students!");
    }//GEN-LAST:event_numberOfStudentSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentsSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentsSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentsSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentsSelection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentsSelection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDAddField;
    private javax.swing.JTextField IDRemoveField;
    private javax.swing.JButton IDSortButton;
    private javax.swing.JButton depAdder;
    private javax.swing.JButton depRemover;
    private javax.swing.JTable depsTable;
    private javax.swing.JButton goToDepButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nameAddField;
    private javax.swing.JButton nameSortButton;
    private javax.swing.JButton numberOfStudentSort;
    private javax.swing.JTextField numberOfStudentsField;
    // End of variables declaration//GEN-END:variables

}
